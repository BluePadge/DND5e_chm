name: Add Files to Release

on:
  push:
    branches:
      - main

jobs:
  update_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Find new files
        id: find_files
        run: |
          git fetch --prune --unshallow
          git diff-tree --no-commit-id --name-only -r HEAD@{1} HEAD | grep 'DND5e_chm_release/' > new_files.txt || echo "No new files"
          cat new_files.txt

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: |
            New files added:
            ```
            ${{ steps.find_files.outputs.stdout }}
            ```

      - name: Add files to Release
        id: upload_files
        uses: actions/upload-artifact@v2
        with:
          name: files
          path: new_files.txt

      - name: Get Release ID
        id: get_release_id
        run: echo "::set-output name=release_id::${{ steps.create_release.outputs.id }}"

      - name: Attach files to Release
        id: attach_files
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: new_files.txt
          asset_name: ${{ github.workflow }}_new_files.txt
          asset_content_type: text/plain

      - name: Update Release Title
        id: update_release_title
        uses: actions/github-script@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const context = JSON.parse('${{ toJson(github) }}');
            const newFilesPath = `${process.env.GITHUB_WORKSPACE}/new_files.txt`;
            const newFiles = require('fs').readFileSync(newFilesPath, 'utf8').trim().split('\n');
            const releaseTitle = newFiles[0].replace('DND5e_chm_release/', '');
            const octokit = require('@octokit/rest')();
            octokit.authenticate({
              type: 'token',
              token: process.env.GITHUB_TOKEN,
            });
            octokit.repos.updateRelease({
              owner: context.repository.owner.login,
              repo: context.repository.name,
              release_id: context.event.outputs.release_id,
              name: releaseTitle,
            });

      - name: Cleanup
        run: |
          rm new_files.txt
